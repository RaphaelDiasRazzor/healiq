name: Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Extract version from .toc file
      id: version
      run: |
        VERSION=$(grep "^## Version:" HealIQ.toc | cut -d' ' -f3)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
        
    - name: Check if tag already exists
      id: check_tag
      run: |
        if git tag -l | grep -q "^v${{ steps.version.outputs.version }}$"; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.version.outputs.version }} already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.version.outputs.version }} does not exist"
        fi
        
    - name: Create Git tag
      if: steps.check_tag.outputs.exists == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${{ steps.version.outputs.version }}" -m "Release version ${{ steps.version.outputs.version }}"
        git push origin "v${{ steps.version.outputs.version }}"
        
    - name: Create addon package
      if: steps.check_tag.outputs.exists == 'false'
      run: |
        mkdir -p dist/HealIQ
        
        # Copy addon files to package directory
        cp *.lua dist/HealIQ/
        cp HealIQ.toc dist/HealIQ/
        cp README.md dist/HealIQ/
        cp LICENSE dist/HealIQ/
        cp CHANGELOG.md dist/HealIQ/
        cp INSTALL.md dist/HealIQ/
        
        # Create zip file
        cd dist
        zip -r "../HealIQ-${{ steps.version.outputs.version }}.zip" HealIQ/
        cd ..
        
        # Create files list for release notes
        echo "## Files included in this release:" > release_notes.md
        echo "" >> release_notes.md
        echo "- All Lua addon files" >> release_notes.md
        echo "- HealIQ.toc (addon metadata)" >> release_notes.md
        echo "- README.md, LICENSE, CHANGELOG.md, INSTALL.md" >> release_notes.md
        echo "" >> release_notes.md
        echo "## Installation:" >> release_notes.md
        echo "1. Download the \`HealIQ-${{ steps.version.outputs.version }}.zip\` file" >> release_notes.md
        echo "2. Extract to your WoW \`Interface/AddOns/\` directory" >> release_notes.md
        echo "3. Enable the addon in-game" >> release_notes.md
        echo "" >> release_notes.md
        echo "See INSTALL.md for detailed installation instructions." >> release_notes.md
        
        # Extract changelog for this version if it exists
        if grep -q "## \[${{ steps.version.outputs.version }}\]" CHANGELOG.md; then
          echo "" >> release_notes.md
          echo "## Changelog:" >> release_notes.md
          echo "" >> release_notes.md
          # Extract changelog section for this version
          sed -n "/## \[${{ steps.version.outputs.version }}\]/,/## \[/p" CHANGELOG.md | head -n -1 >> release_notes.md
        fi
        
    - name: Create GitHub Release
      if: steps.check_tag.outputs.exists == 'false'
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: HealIQ v${{ steps.version.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: HealIQ-${{ steps.version.outputs.version }}.zip
